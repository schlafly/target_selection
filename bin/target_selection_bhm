#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Tom Dwelly
# @Date: 01-03-2019
# @Filename: bhm_targeting
# @License: BSD 3-Clause
# @Copyright: Tom Dwelly


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import pkg_resources  # part of setuptools
#from pkgutil import get_data

from target_selection.bhm_aqmes import *
from target_selection.print_func import *

__version__ = pkg_resources.require("sdss-target_selection")[0].version

#from . import masks

utah_outdir = "/uufs/chpc.utah.edu/common/home/sdss10/sdss5/target/development/alpha0"

if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Performs target selection for the SDSS-V BHM project.')

    parser.add_argument('-o', '--outdir', required=False,  default='./', help=f'Where to write outputs. e.g. "{utah_outdir}"')

    # add more arguments

    parser.add_argument(      '--version', action='version',    version=f'%(prog)s {__version__}')

    args = parser.parse_args()

    outdir = os.path.expanduser(args.outdir)
    os.makedirs(outdir, exist_ok=True)
    if os.path.isdir(outdir) is False:
        raise Exception(f"Failed to find/make output directory: {outdir}")

    print_comment(f'Writing output to: {outdir}')


    # All AQMES targets
    try:
        aqmes_cands, aqmes_col_dic = get_aqmes_initial_candidates(
            db_table='DR14QV44',
            peewee_selection_expr=["db.psfmag[3] > 16.0",
                                   "db.psfmag[3] < 19.1"])
    except:
        raise Exception('Errors accessing catalogdb')

    # now carry out AQMES-WIDE specific selections
    aqmes_wide = select_aqmes_wide_targets(cands=aqmes_cands,
                                           col_dic=aqmes_col_dic)

    outfile= os.path.join(outdir, f"BHM_AQMES_WIDE_targets_v{__version__}.fits")
    print_comment(f"Writing catalogue to {outfile}")
    write_targets_to_fits(aqmes_wide, outfile)

    # now carry out AQMES-MEDIUM specific selections
    aqmes_medium, aqmes_medium_fields = select_aqmes_medium_targets(cands=aqmes_cands,
                                                                    col_dic=aqmes_col_dic,
                                                                    ntargets_req=3000)

    outfile = os.path.join(outdir, f"BHM_AQMES_MEDIUM_fields_v{__version__}.fits")
    print_comment(f"Writing catalogue to {outfile}")
    write_targets_to_fits(aqmes_medium_fields, outfile)

    outfile = os.path.join(outdir, f"BHM_AQMES_MEDIUM_targets_v{__version__}.fits")
    print_comment(f"Writing catalogue to {outfile}")
    write_targets_to_fits(aqmes_medium, outfile)

    # done
